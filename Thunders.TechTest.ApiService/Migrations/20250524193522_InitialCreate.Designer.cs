// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thunders.TechTest.ApiService.Data;

#nullable disable

namespace Thunders.TechTest.ApiService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250524193522_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Thunders.TechTest.ApiService.Models.Praca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Estado", "Cidade")
                        .HasDatabaseName("IX_Praca_Estado_Cidade");

                    b.ToTable("Pracas");
                });

            modelBuilder.Entity("Thunders.TechTest.ApiService.Models.RelatorioProcessado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataProcessamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("IdSolicitacao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MensagemErro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParametrosJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultadoJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TempoProcessamento")
                        .HasColumnType("int");

                    b.Property<string>("TipoRelatorio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdSolicitacao")
                        .IsUnique()
                        .HasDatabaseName("IX_IdSolicitacao");

                    b.HasIndex("TipoRelatorio", "DataProcessamento")
                        .HasDatabaseName("IX_TipoRelatorio_Data");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("Thunders.TechTest.ApiService.Models.UtilizacaoPedagio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataInsercao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DataUtilizacao")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("PracaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoVeiculo")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorPago")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("DataUtilizacao", "Cidade")
                        .HasDatabaseName("IX_DataUtilizacao_Cidade");

                    b.HasIndex("Estado", "Cidade")
                        .HasDatabaseName("IX_Estado_Cidade");

                    b.HasIndex("PracaId", "DataUtilizacao")
                        .HasDatabaseName("IX_PracaId_Mes");

                    b.ToTable("Utilizacoes");
                });

            modelBuilder.Entity("Thunders.TechTest.ApiService.Models.UtilizacaoPedagio", b =>
                {
                    b.HasOne("Thunders.TechTest.ApiService.Models.Praca", "Praca")
                        .WithMany("Utilizacoes")
                        .HasForeignKey("PracaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Praca");
                });

            modelBuilder.Entity("Thunders.TechTest.ApiService.Models.Praca", b =>
                {
                    b.Navigation("Utilizacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
